name: Apple platforms CI

on:
  push:
    paths:
      - apps/ApplePlatforms/**

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  XCODE_APP_NAME: Xcode_15.2.app

jobs:
  test:
    name: Test
    timeout-minutes: 20
    runs-on: macos-14
    if: github.ref != 'refs/heads/main'
    strategy:
      matrix:
        test-commands: [
            "test-ios",
            # "test-macos"
          ]
    steps:
      - name: Checkout certificates
        uses: actions/checkout@v3
        with:
          repository: kamaal111/CodeSign
          ref: refs/heads/main
          token: ${{ secrets.CODE_SIGN_ACCESS_TOKEN }}

      - name: Install just
        uses: taiki-e/install-action@just

      - name: Select Xcode version
        run: |
          ls -d /Applications/Xcode*
          sudo xcode-select --switch /Applications/$XCODE_APP_NAME/Contents/Developer

      - name: Import signing private key
        env:
          SIGNING_PRIVATE_KEY: SigningCertificates/Distribution/Apple Distribution Kamaal Farah (DXUKH9VF73).p12
          MAC_DEVELOPER_INSTALLER_KEY: SigningCertificates/Distribution/3rd Party Mac Developer Installer Kamaal Farah (DXUKH9VF73).p12
        run: |
          just import-signing-private-key "${{ env.SIGNING_PRIVATE_KEY }}" "${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}" "${{ secrets.KEYCHAIN_PASSPHRASE }}"
          just import-signing-private-key "${{ env.MAC_DEVELOPER_INSTALLER_KEY }}" "${{ secrets.MAC_INSTALLER_PASSWORD }}" "${{ secrets.KEYCHAIN_PASSPHRASE }}"

      - name: Copy profiles
        run: just copy-profiles OwnStonks

      - name: Git - Checkout
        uses: actions/checkout@v3

      - uses: oven-sh/setup-bun@v1

      - name: Bootstrap project
        run: just bootstrap-apple-platforms

      - name: Trust Swift macros
        run: just trust-swift-macro

      - name: Test
        run: just "${{ matrix.test-commands }}"

      - name: Check diff
        run: just assert-has-no-diffs

  deploy:
    name: Deploy
    timeout-minutes: 20
    runs-on: macos-14
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        deploy-commands: ["deploy-ios", "deploy-macos"]
    steps:
      - name: Checkout certificates
        uses: actions/checkout@v3
        with:
          repository: kamaal111/CodeSign
          ref: refs/heads/main
          token: ${{ secrets.CODE_SIGN_ACCESS_TOKEN }}

      - name: Install just
        uses: taiki-e/install-action@just

      - uses: oven-sh/setup-bun@v1

      - name: Select Xcode version
        run: |
          ls -d /Applications/Xcode*
          sudo xcode-select --switch /Applications/$XCODE_APP_NAME/Contents/Developer

      - name: Import signing private key
        env:
          SIGNING_PRIVATE_KEY: SigningCertificates/Distribution/Apple Distribution Kamaal Farah (DXUKH9VF73).p12
          MAC_DEVELOPER_INSTALLER_KEY: SigningCertificates/Distribution/3rd Party Mac Developer Installer Kamaal Farah (DXUKH9VF73).p12
        run: |
          just import-signing-private-key "${{ env.SIGNING_PRIVATE_KEY }}" "${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}" "${{ secrets.KEYCHAIN_PASSPHRASE }}"
          just import-signing-private-key "${{ env.MAC_DEVELOPER_INSTALLER_KEY }}" "${{ secrets.MAC_INSTALLER_PASSWORD }}" "${{ secrets.KEYCHAIN_PASSPHRASE }}"

      - name: Copy profiles
        run: just copy-profiles OwnStonks

      - name: Git - Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Make env
        run: |
          rm -rf .env
          touch .env
          echo "GITHUB_TOKEN=\"${{ secrets.FEEDBACK_GITHUB_TOKEN }}\"" >> .env
          echo "FOREX_API_URL=\"${{ secrets.FOREX_API_URL }}\"" >> .env

      - name: Bootstrap project
        run: just bootstrap-apple-platforms

      - name: Trust Swift macros
        run: just trust-swift-macro

      - name: Bump version
        run: |
          VERSION_NUMBER=$((${{ github.run_number }} + 81))
          just bump-version $VERSION_NUMBER

      - name: Upload
        env:
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: just ${{ matrix.deploy-commands }}
